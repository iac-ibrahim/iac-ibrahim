# -*- coding: utf-8 -*-
"""spam csv 9/2/25.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JzjvMWG3A75TkqkrAWRnogqYCBxh_97V
"""

import pandas as pd

df = pd.read_csv('/content/spam.csv', encoding='latin-1')
df

df = df[['v1', 'v2']]
df.columns = ['label', 'message']
df

df['label'].value_counts()

df['label'] = df['label'].apply(lambda x: 0 if x.strip().lower() == 'ham' else 1)

df

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['message'])

X_train, X_test, y_train, y_test = train_test_split(X, df['label'], test_size=0.2, random_state=42)

from sklearn.naive_bayes import MultinomialNB

model = MultinomialNB()
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report

y_pred = model.predict(X_test)
y_pred

accuracy_score = accuracy_score(y_test, y_pred)
accuracy_score

print(classification_report(y_test, y_pred))

from sklearn.metrics import confusion_matrix

print(confusion_matrix(y_pred, y_test))

from sklearn.datasets import load_iris
from sklearn.naive_bayes import GaussianNB
from sklearn.preprocessing import LabelEncoder

iris = load_iris()

data = pd.DataFrame(iris.data, columns=iris.feature_names)
data['Species'] = iris.target
data

X = data.drop("Species", axis=1)
y = data['Species']

y

y.value_counts()

le = LabelEncoder()
y = le.fit_transform(y)

y

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

gnb = GaussianNB()
gnb.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report

y_pred = gnb.predict(X_test)
accuracy_score(y_test, y_pred)