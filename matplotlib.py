# -*- coding: utf-8 -*-
"""matplotlib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mj-5khPUmfjLtmIFr-yovKabHuhU1JD4
"""

import matplotlib as mpl
import matplotlib.pyplot as plt

plt.style.use('classic')

import numpy as np

x = ['2021','2022','2023']
y1 = [10, 40, 30]
y2 = [10, 30, 50]

plt.plot(x, y1)
plt.plot(x, y2)

plt.title('Sales Analysis')
plt.xlabel('Year')
plt.ylabel('Sales')

plt.savefig('sales.png', dpi=450)

plt.show()

import numpy as np

x = np.linspace(0, 10, 100)

plt.plot(x, np.sin(x))
plt.plot(x, np.cos(x))

plt.show()

import numpy as np
x = np.linspace(0, 10, 100)
fig = plt.figure()
plt.plot(x, np.sin(x), '-')
plt.plot(x, np.cos(x), '--');

months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
temperature = [10, 14, 19, 25, 26, 28, 27, 25, 22, 18, 13, 10]

# plot

plt.plot(x, np.sin(x - 0), color='blue')        # specify color by name
plt.plot(x, np.sin(x - 1), color='g')           # short color code (rgbcmyk)
plt.plot(x, np.sin(x - 2), color='0.75')        # Grayscale between 0 and 1
plt.plot(x, np.sin(x - 3), color='#FFDD44')     # Hex code (RRGGBB from 00 to FF)
plt.plot(x, np.sin(x - 4), color=(1.0,0.2,0.3)) # RGB tuple, values 0 and 1
plt.plot(x, np.sin(x - 5), color='chartreuse'); # all HTML color names supported

plt.plot(x, x + 0, linestyle='solid')
plt.plot(x, x + 1, linestyle='dashed')
plt.plot(x, x + 2, linestyle='dashdot')
plt.plot(x, x + 3, linestyle='dotted');

# For short, you can use the following codes:
plt.plot(x, x + 4, linestyle='-')  # solid
plt.plot(x, x + 5, linestyle='--') # dashed
plt.plot(x, x + 6, linestyle='-.') # dashdot
plt.plot(x, x + 7, linestyle=':');  # dotted

plt.plot(x, np.sin(x))
plt.axis('tight');

"""# **Simple Scatter Plots**"""

x = np.linspace(0, 10, 30)
y = np.sin(x)

plt.plot(x, y, 'o', color='black');

rng = np.random.RandomState(0)
for marker in ['o', '.', ',', 'x', '+', 'v', '^', '<', '>', 's', 'd']:
  plt.plot(rng.rand(5), rng.rand(5), marker,
                    label="marker='{0}'".format(marker))
  plt.legend(numpoints=1)
  plt.xlim(0, 1.8);

import numpy as np
import matplotlib.pyplot as plt

# Simple example data
x = np.random.randn(50)  # Random x values
y = np.random.randn(50)  # Random y values

# Scatter plot
plt.scatter(x, y, alpha=0.1, color='blue')  # Fixed color and no size variations
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Simple Scatter Plot')
plt.grid(True, linestyle='--', alpha=0.5)
plt.show()

